version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    command: ["npm", "run", "dev"]
  user-service:
    build:
      context: ./backend
      dockerfile: user-service/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - USERSECRET=fox
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  product-service:
    build:
      context: ./backend
      dockerfile: product-service/Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
  order-service:
    build:
      context: ./backend
      dockerfile: order-service/Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
  notification-service:
    build:
      context: ./backend
      dockerfile: notification-service/Dockerfile
    ports:
      - "3004:3004"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  category-service:
    build:
      context: ./backend
      dockerfile: category-service/Dockerfile
    ports:
      - "3005:3005"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"
      - "15673:15672"
  redis:
    image: redis:latest
    ports:
      - "6380:6379"
volumes:
  node_modules: {}
